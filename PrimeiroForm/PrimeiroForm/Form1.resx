<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAoHCBYVFRgWFRYYGBgYGhoZHBocGhoYGBoYGBgaGRocGhgc
        IS4lHB4rIRgYJjgmKy8xNTU1GiQ7QDszPy40NTH/2wBDAQwMDBAPEB8SEh40KyUrNDQ0NDQ0NDQ2NDQ0
        NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDT/wAARCACoASwDASIAAhEBAxEB/8QA
        GwAAAgIDAQAAAAAAAAAAAAAABAUDBgACBwH/xAA8EAACAQIFAgMFBwMCBwEBAAABAgADEQQFEiExQVEi
        YXEGE4GRoTJCUrHB0fAUYuFyghUjNJKiwvGTFv/EABoBAAIDAQEAAAAAAAAAAAAAAAMEAQIFAAb/xAAr
        EQACAgIDAAEDAgYDAAAAAAAAAQIRAyEEEjFBIlFxBWETMnKRocFCUoH/2gAMAwEAAhEDEQA/AIatTwwE
        vvNncmZRp3mTJ9Y0NNhFNzaRYlCwhSJD6GHFt4spuLsG1aKXiMK4N7SfD1ehlpx2FXTxKjjBpfbvH8OZ
        5NMpFdZDbD4YHe0mqYSw4mZY9wI4KXEXyZJRkMqiutg7i8WZlgtriW33Nosx+GvcCdg5T7kTjaK7l7bx
        4xGmKqOFIaMxTJFpozkm7RWOkIM2tEjPOg+4p08O4dFd6iOdwCQLEIFJ473HU+Uq/s7luusGceCnZ2vw
        WH2F+JF/RT3h8bXVv7ApwfZfuTVfZqslFKpKXcoPd3Ica2CryLE3YXHS8Kx2Qvhyl3Rw191uLEWuCD67
        H8o5Ss1WuXb7NHxeRdvsj4C7fFYN7Q0HAR9QIvYje4ZgTfzFlt8JCzSdRLzwR6toGonTzIMS4biRvU2t
        HfstkT4h9Wke6Fw7sONttIOzN25G247h607Yso7Kbi8P1nuGy5yCdDaQLk22A4v/ADsZ2zLcmwuGN0RX
        e58bAFt/urfgdI0OJpsNJRCp20kCxHUW/SGjn66COFnHMtpECE4mptadXrYbD1F8VJPgANx6Sle0/syU
        8dJSybXUXZlY9huSvG+/MXyycpdgsNaK3lyXN5YkQWiPD02RdRVgt7XIIF+1+IcuNsLRDMpSdoIaYtYs
        rVtoc1KrVDBFvpFzuB+Z58pV3xJJjeCLcdg8joa4ZdRjWlhRbeK8tUx+h8MtKOyMcE9iTF4MA3k2ATSb
        wzFAEQNWtF5Jt0WlFWWjDY4KIPjcxuOZW3xhHWaCvqhotxR0YpDWnuYUKG0U0K9iI8wtQESmSfVaOYtx
        NAXg6YTUfDGuJImYAi8hTfWyy+4McrNrmJcTlw1GXpnXTvK1jKiazIhOTKttjA4DaRijaOKzCKalUA2g
        8jTEsTn2MQSf+o0ieIwtAcbW7QUIqUqY4jMwzK6ypV8QS/xjTE1LiI3G95owhCPh0olsyd9hLHSO0qWS
        vtLTh6lxM7lp/AWJI6dYvrkQzEVdokxNc3sIHBhcthFRIlEXvDaFFTF9F4fhDqdVHU7+g3P0Bj8YySoo
        2rNq1EO5FhYLYd9rQGuiIpANjck+Z/m0eJhgHv3vNamEp+JmUHsPOGSafoTqrEaUSiogPJ1N6ndj8OIB
        j9dZSP7wduyhhb/yjHMKejUW1eNdretyAe/ElyzDAUxflvFv2PEiWRx38lZ/y0IFwBuAQTcgee86hjaa
        YTDqiWT8IPiJ33Pzv9Yk9nMGr4lbi4QFz28PH1IPwhec1RiKpbouy9rd/jaX7Nx7MXhFOVA6Yy+5uZMM
        W3S3l0PzkSYYTK1Ow5EAuwy4RGuExN9iOd/iYJnzuaLul70/FbuvBI9Bv8DNcFigvb97frFlL2n0VilZ
        LEdtjY9R0YQi8B9KdoS1M6ZlD6da8VF7een8J+hhNLLlIDoSUfi/Kn8J/eLc8wKU39/hn/5Dki1t0f71
        NlPA5IvyCe00yLNkovpZmKOfsgX0gna3e36SZRtHPaHaIaQJHUr9LxZUyZQ7EDYkkeh3EY55ifsBT11X
        t0tYXHTmT1KoCLfnSPyEXnklGKf7ndU0kxTTohIfh94txNffaEYGvaXk5dLOSoPq4YEcRRiqVo+esLRR
        ijeAwOTls6SEWLmmFaHYiiLGBYZLGOySaKOO7GSUrxrhNhaLqDWjHCLvASimiptiacBR9B5jDEja8r+P
        xYBIhIR1QKebqM3x5O14JUpXN7xQuL3hyY1bcwyhXgNchMsb44MNouxFaJqeKI6wvDvrO8WcEtjEYpIJ
        TFEzWojN1jPDYQEcQ+nghaBeWMXo78FeXLSeZBisqsNhLiuGEjxOHBHEG+RJMm7Khgl0Gxlgw9cWi7E4
        exklFoeUJTimTFhuJfaKX3MZN4hIqWFu0lVCISyKksdZLhrl2I4Gkep3P0H/AJTxMHtGWDpaEsevi9Lg
        W+lvnIxZezoiLtgGLo2a6lhfsb/QzSlTJtcM3rYfTrDCNRh1LCi3O/U/tDhm6K9nFEkaWHNh02ubA+UF
        r4rTxxwI8x+AVip1k2O3HUHrFeNfCobawz9r62+Q2+k5pP0pJOVE2QAsHdiFQblibW0C5Hx1Q/B1abXK
        ureQPHwiEVyaVRFp3GoMARpvYW69JW6yVPeBlpBGAG6ODc9tN9/XaTprRVJxOlgA9YLi6N+DEGcYmtSo
        q67s4FgORt1Eq+Gzqopu+JqKTwCjEW9e0iMeyLOXUuFSro5P6/OaYqlTxKaW+0v2WAs6/wCPKLMPnAqb
        NY7bOPvW79jDMMhZlKC978EfXeRVMu9oVpQdL0XW47DxCp2PoO8Kw2FKbspFvLa3oJZUwvvHQOr+BACo
        vYnUxvdSLnfjgW85M2XAbhdI6jxXHnc8/KWuyqWhdQxCMV8Ja/8AaT9ILnl1dLCwKW4turEHbpsVljwl
        EKfoILm+HDrbqpv52bY/XT8pWVdXZWTpFQZZth6m8YVMHaAijpaBjlUlSKKQcjkibDDzSg1oxpoDIclA
        5yEtemeJvhcuvDsQgvC8KwEmWTtHRVu0Lv8Ah5BvDMNRtDqrC0FZ7RSU5eFSPGU9pUM1pbky0V60reat
        GONOXYXzRTQgL2k6UiRe0jw9LW9pYKeFFpqJCyjZFiKNpHhsVpIEa5mnhvK232xFVG1TH2+ui74LEbAC
        OaXErOSAtaWvDU5l5l1kWTJESaYiwEldtIiXMcbYGVxRcpHAuKqC8gVhFWIxJYyShXM10qjRKkkP8PRv
        GGGwt2AAuSbAd4LktJqnHA5Y7KPVv05lzyFKQB0NqcbMSLEf6R+Hz/8AkAsUpvfgNyb2SYHKwoDOAT26
        D9zAfaDL3cF0vfe4G97dgeT5R89S0X4/FKo3YA/zb1jMcUYRpERk07OdUM1COQz2PnsflJ6vtGqdS3l/
        iKvat6VWtrQHXw/FiR5jk/tE9K4MhRb8GXk1dFgrYupWHjJROdK7E/6j09BBdYXYAAeW0xKnhmji5nZE
        oxBd23ss+TlWRDYXFx67k3+tvhJamETVfSpY+Qv6xVhamlAoNitz8D1/naBHNGVQ9NXa9ySBfV22MDB9
        ooYi9D3NUA06vsgWt6+UXVMhRm2dwp3Avtb4gxF/xnGO1ygRCbEujX362hmGzA0zpDakPB6g9jCVRNpm
        +Ky1KSnQAWPW28DyutUQ6FcK24F1uCbX3PS5sL78xqcSGux6bxMiPUqD3YF1DEg2sQbDrITs66LbkmcM
        QfeizE2uNwbCNGx6X3a3rFSUC6jWBcje379/OB4nLqwB92wYdm2b0vwfpJTa9KucbH7Yld9JBPTp9Zvl
        WXPVckldwQxANhfux59LCVv2ayqrXdlrqURCL3+0xPRelh1O/ItOqYDDoiBUGkAbDv59z6mWjDtt+A55
        FVIomZYNqbFWFj9CO4PUSvYq151XPMtGIplRs4uUPn2Pkf8APSckxpKuyuCrKSCDsQRyDE54Hila8Bxk
        R02JMb0QbQPL6QJjo0rCAzTvRdi6usCeqR1jJ1vNK2CuJEMnX0hOgKljSeZOKl4LVo6YM+KCxpY1kWik
        pB1ZhEOZQxsZeLsY94fFx+jsXyy0B5eLE+ssdB10jeVii+kwr+o844nQFSRYcRdkleal4wBOh0ssUrxF
        lfIBr1CZ8c8VaY3K5OyXJMLYCWFFsIDgaWgWMLqPtM3JLtIIhdmeKsJX3OsyfO3J4M3yfBl11Hwr+K1/
        go+8f4bRzFCoqiva31AjhNwALk8AC5PoI2wGTIN6u/8AYp+jOPyHzHEZ0aYAsi6QeTy7erdvIWHrCEUK
        IylQWOFes9q1VRAWsqL9lV2Ueg6k95Xmzl6dVaimyAg6bbsp2K/n9JNmmNu1riw5vwo/eV/Eaq7hU478
        ACX7UWnVHTcVnKhdSm9wCLdjwbdusq2a5lUqgpqsDzpFr/r9YJrFKkEB1NYC/Ww/TykGHrWO8s4zk034
        LRasifLhp25iXEHTe8tqqXOlAXY8KouT8BEuPyHEux04er/+bD6kQ0XG6bSLyk0hMmN6Q/DPqIkKeyON
        J/6ZwPMoPzaHJltWiVFVHS/GpSAbdjwfhIzfw2qUk/wyMdt7PMzqMrKL2R0ZSe2xMBy3DYpSxWklWmFV
        rPqFgbgKjLwRa/xEZZ5TvQJ/DY8fCWLJ8UDQpaRyov5kbb/SAwKlQwleinV0xJUsuBemLc+/a3B30se9
        vlFuEFZWR6q6Q5vba+kdSJdM7zdGf3KtfTbUBwWP3WPYc263HnKT7S44lwAb6R9TCypukjnHqrbMxObl
        2IXZb/OWf2dFgXPUW+v+Jz/BoWYDpeXR8TUponukV9ZKjU4WxAGwBPiJvsB2lGkmkU7Wm2Wpa8YUHuJW
        0LhKbuLaxfrYEbMu/BB2I9I5wdS4g+RJxi0VpNWhnrK7iWDKcdrXfkbdNx3+srLttIqOLNNw1zYHe3br
        /PKJcbkuMusvH/go0XytilRdTHb6nyAnO/bPDriCtSipStupU2/5mkXC7cOBx+Ljm0Dz32hapXKLfQlg
        LfeJUEk+W5HwE8q43UltN1IAJOxJUcia0l2VfBySFuS1+L/wyz6LrFC4YVfEPDVPDbBatuj/AIX/ALuv
        XvD8BXP2WBVlNiDsQexEy+Vi6vsvCyv5Nv6beENT2hCqJHVG0RcrJK9mtgDKdiq/iMtmdHYykYl/EZtc
        JfSBl6GUHmV1NpmXreN/6e4jvWwE42V1kmto1xNECAFZDjQHozrmDrAiEPTBiTAvsIccVYTF5OBp3E0E
        60D4+poBIiCtng4vDc6rEqbGVfI8iatVNWqT7hD9m9jUcbhRb7vBJ+He04MCkrkTtukWHL8Cao94+yfd
        HBf9l8+v1jlKfHYbAcADsB0kNStci+wFgANgAOABJ/fKBcxvqoqkMQxqK/clFgIuzDHWBA6SHF4otsNh
        EOaYmy24AnF34DLrquVXr4nI4A8/ykrZfU20I7LfTdVYi/a4FryXIsrNSmdRK3IYFDpYG1wQ43+tpbcq
        zCpTcUap1m10c/fQfaVx+MX+I3l+rdtPa+DP5TlGPZ+fNfBU8KdbBE8bXAITxhb/AInHhv8A2glj0Ee5
        Z7KYliffe7QAi1tRJHcG5F/Ig+sveERDZ0RVLdQoB8wSJM+386zPz/qc4/TBV+fS+NR6poCyzAGirAvr
        vpsNCoF0i22nv16dgN7mO55mhe386HaaK9yy99/0/aZU8s5y7N7YVIgrVGJ5NpBjArppqDUlwbEkbg7E
        Ebj/AOwqqm0HqpdSO35ykZzUrT2TorXtKgNJqSIqDxLYfe2upJ5bjk95z7DZ7UpoaYJXSSBtYjoeZ0jO
        6JanrXld/iOnynOc+wqlw7X0uBdh91xtv5Hb43m7wMneDv0WWZ483V+Na/JDQxNKihbdnbe5Nzc+UR4i
        sXJNuT+cJxGBANrk27wjK8DdrkbCO9klYy1KTony3LdKhm5/n1lqTC3934Q2ixVDuGrFrpcfhXSWP+kD
        rFTtYDYkk2VRuSegEuPs1lxp2dxqqt8QgP3V8+5lV/3l4A5XIjhjS/mfiH2WZcPdph3s4G7Ejk3u7X6E
        knfpeb1sjpKbozooIFr6h8Cd+fWMsMgUb8nn9vSa4x/DYzH5XLcpvq9FOLjlGH1evYP/AMHpnTZ336bG
        48u08OVUWOnQSLW5YG/fVe30k1Aadj0v9d/56SZmtt1MV/jNbGKKF7R+zL0waylWQHexOvTfYstum1ze
        K8K5caPO/PoDOnPTR1KOAyt9oHrOcY3Cf0uJKPfQfEh/EhOwP5H0mvweX3XWXpVrYdWdEKoOep7D94fh
        nDWDkbeFag3I8nN91Hfp9IjeoGvYbG4uOn+YTgsZtpK+V+v/AMj04KUaey9p6ZYS+nZuf5uD1Ehr4hbQ
        LDNrQoWtb7DHlb9PNedvlKnmecNTdqb+F12I+oI7gjcHqDM6XBl2+naKSdBeeYobynV3uZLjMxL9YHe8
        1OPicI0wb2OMrbiWNR4ZXcoS9pZkXwxhy6kRhYoxtS3SLbiMszSCU024g3Owqgi2ZVibi0LrNzK3gq+k
        iNq+KBW8h41VMhq3Yvx+KNipMJwOaqtFFtsAfmWJa/neVTPcfbiK8uzIqSrHwnceR7waxUtBIzjGR0VM
        xDbzZ8Vfk7SrYfH3Fjz08542YspOv6GBaYx3Q9xmOCjbfyH+IpqoSjPUFjsFQ9L9T5+U1p45Sb7AzXFY
        kOCAdpEdMpJ2ibC5yUFhpPxYfkZO+csSrgDUhDg3Ynbkc8EXErNRCNwTMTGhQbg8d4zGcU9Csk2ur8O3
        5NmCsu26sodflf8AL8o1arfa/IuD5f4nNfZbONKUQeikfDS0tOWZkGAsdgQRfor38J9CCPlMD9RgllfX
        wX4Tag4v4bS/A7qtdb+Uhq1NLq3S4v6Nt+3ymyv4SOxIg7m4+FviJmjo0ZD2kNU26esyhU1Ip62Hz6zY
        i8tRwCKYJZTwf5+3ylSzT2aZtQRdSm+pOo81HUeXSXdafB/CbH0PEIXDgnz59RL4M8sUriwebCsqp/3+
        xwx8jqpU0MLA30Fja9typPcDp1h5wzIgAGn8R22Hf18p2PEYRHKh0R7EHxKrbqCRyJrgcOxW7oiNc/ZV
        V2+F5rvnRlHtXlWr9LYXKEestv7lH9mPZhzatVXSxHhDfcT0/Eevy7y64bCqn2Rv1Y8/DtD2svqfOau2
        1zzEOTzZ5nXi+yBR48eznLbfy/8AQLV2PlIydX5Qgjv1mIg9IolsOaAXO46c+kDWrrdrdPCP1Pz/AChW
        YVNCG3J2HqYBlZAYjsP1kSe6OGDpYecp3tvjaRRUf7atdDyb7Bht93i54G0tOY4rShsd+L9trn6W+c56
        tRaqmq3NS9ieAgJCKPUC/qT5TX4HHTX8V/Hn5F3OU8n8OOqVt/6BKFVkGk3KncC9ud9+4m617Nc9eg/S
        QtUDErfiYlBvun4TVjL7jDi/gd4ZwbBRxa9rwX2lyL+qpl0ANanfT3dALlCevUr53HWE4Usgs3la3Unp
        G2GIQAE2PJ9ZKlTtFunZbOLoYxwOELcxj7WYBExjaBZKgFQAcBmJDAeWpSf90LwFMWEbc0o2gCg+1M9w
        1DTGSVdrSGq4G0zDi5gVLsXf0nlagWntPBbR3hsKDJzhBO6kdmUOljADCXxXh5leLGSDEm0Z5GNrwrCX
        wDZq2oxeohtc3kApwUYtFZVZZMlpI6AOA3r+h6Rk3s3TbdWdfK4YfUX+sG9nsMSBLjQwJsJncmfSTplo
        vRSa3s2y301AR2KkfUEwJ8sqjbY+jfvadCxWGsIiqpYyMGRz9Fs+eWN6KxXoui3dLDYcg87DgwangXxB
        KqFFgWJYhdl5PnLNiEVgVbgix/x5wWnlDMukMBc2Z/7eDYA31EbWtbc7mMVStMiGac0tDTIKaAU9R393
        fz8SdfnD8vrMjEdD+YII/KeZbl9NBuSx4vxsOghtVUA2UevX5mZXITyTbL4foTT9bss9Ktq3HDqGHr1/
        Oa697RXlbkUwCdlNh6X/AMQ+i9nX1t89plyhUqG09DXAi917bj0P+bwxABsYvR9DBuxKn0PH1tEGV+2C
        a6hxRamb2RApKqvUMB4i9xuSPS28ZwcTJni3DdfHyQ5JelqfwNc7qdj6dD8JMx0kHt+USf8A9NhnFkd3
        8lo1mP0SMMDiQ6ldNQAbqXR0JHazgH6RfLx8uPco1+SykmM1YX/n86zx2J4Egw9e3hI3H5dJ69YtwCB9
        ZRSVHEiAA9+5gmIxF9arZnVdWgHc9vSSux0kXC7Gx6DsTKpiMzauyCkxNNCNVRRpbEOrfZU8+6BBvb7R
        2vYG7XE4s+RKoqweTIoq3osiYgnSNBF1uxuLIfwnueflJqFRXUMpBB6jiVDG5O9Co9RAaRZzoZCqs+rx
        EMm4fcn7amOPZ7Eu1EvUIur1BsoTwo5VDYbbqA3+6NcngSxYlkvT/uDx5VNtb19zM0r3qBeijfyY8TTB
        mz/CBhyzsx6m/wA+JvhqvjBP8/m8yq2MAuOxWpXXrrqetjYA/p8JzChnZ0rTtZkAS3mvh+PEtyYsnEeW
        plPozH9SD8JX8x9nj796lJ1DBydDXA3swsw8mE9BxJxji6ydeCsU45m18pf4CcAwY77Nb+fpPVrMj78Q
        PG13QAupUA/2lSfUGT4bBYhwKi0WYMLqTpAIPB8RG0M5qrvQ13SdWORiyE1k2A4iOt7Qm58RJ6D95NmG
        AxdQWqaaaDpcMfkpt9ZWq+H0uVHz6mXxdW6TJlmXkSbF49qjhm+6NI9Lk/qYbhsZaL1oTVkIM0YxjKNA
        HKSdsf0amoxnhksbxXli3tLBSSDlFRdIjs2McNWsJs+I3gYNpC7G8qTZQXWQOsIMjqLNTKlQJA09QTRz
        vNkbcRXRLOg+zFHwiXNKe0pvs7igFEti4sWnm+ZbmwsNIEx/ErWJ5lhxuJW0QVnDGE4jaFOVHt4KcS9t
        5DSx9trw/G010ysVjZ7TQSTKYFKKLjgsQWhdepF+TpsIyrUohKKcwqdsa+zxLo4/CwHoDuPrqjaphyDE
        /sncO69GUN/2Ej/3MtyU5l8mNZWNwdxNHTUAejCE4Z7r4gCR4Ttv6/ETZKfht2/IzRbI1+h2b06H4QFt
        FwsDa4g+IB5HI3m5Yoe6mSWDDaDbbOB76rMuzDkfnCKdVTzsYMyEG42nn9Ql7PYGUVpnEtVr8RLRy1Fx
        Dq5QJU8YQtZwzDS5Veg1hGv3du+7ykinhriJvaHBO2ioihmTUCtwC6PbUqkkAMCiML7HTba95p/puZ4s
        6d0npsFminFqrJ0eoypVJV6dOx0qupyVXQ2kne2re9+ANuYqXHEvVTUWVyrJcWspYqy28gE+JMHwGZsX
        WkXdAyugRlen4iNQKhgAx2P2Seshw1JtaO4KFwdCH7ehftMw6aiVsOgUX3JA2/1CeF4pRbtqmv3sWxPI
        5J1S+QxuGPn+khqtpv6foZu52P8Aq/8Ab/EhxR5HcW+g/eeXS2PFCqVQcSwBNlNvjtq+t/lGeaJVW1VF
        1qygOONDKLBj/aRYeRUd4hr+HFVe3vXt6ByBOgZHU8InoZxjGKtaqhabqWioZNkFfG1A+IDJRU73BXX/
        AGoDvY9W+Xl0oUgBYDYflN0abkxbL1nS8S8RBX86Twmc1x62qGdPzoeEzmOa7OYxxIpPQXG0j1GEHxDb
        yJKk0JLECaMW0yZNNFiyk8SyIdpXsopWtLAktJ2wZuTNdM2USXTIOOeCnNKy7RkKB7QbE0D2jDySkXbj
        QkqczxTCnwpvxMGEbtLdXQEOwGZMkaD2jbziRMK3aaVKDdorPBCTtosmOantDfvIaWa3MTii1+IQmHbt
        KxwQj4iHv0bV8eCOYpw6GpVAEypQbsYz9maNn3l3BJaOVFxyjLiFEYVcGY1yymNI9IZUw4icsCbs7qJs
        lwxSspPBuD8QbfW0tiJFuHoAMD5j840WZXPxdJJ/cNj0jENm+h/SZVpzHWSL4l85nSCEFBttB/2+nb4S
        KtqS5XoCbd7CSVKfwI6yRH1bHkcwdbOEuX+0nvHKPSKEAnk32KixBUW+1JnzLCu5RqgRl2s/hBuAR4jt
        1kFLBg4l28qn0KCLqmQJUxL6xsTv04pr1Eflgxyk7VKr0IxzzUV8vs1scmihPgqrf+1r/lxAs6y+touG
        ZzcCw1NseTZd4pr5N7jEIaTuFGg6dRIJJYHk9vyj8Y2qRZGF+xHPxgp444nFx2mr2FxzlkUoy0060JP6
        fEoG00kW+kqzKvgYaGJJN+LvzfcbcTXAUWd3xNckkXKqGNlFhddjYi4FvQHmMXw1Wqf+ZUYrzptb522k
        mYKFRUUW1Ef9o3M6WZtUkl+AkcVbbb/ICt9K35JB+dzB8aOPNlX52J+ghlVePI/4gmPYAKT0bV8uYOCu
        aCPw5riqwNd27u5+bE/rLrkmKFhvOfGk3Nt+YwwOPdNjPT8jjuWOkKy27Or06wPWTCoO8oFDPTaT/wDH
        jMZ8XJZFlhzeqLGc1zceMx5jM0Z5XsUjMb2mhxMMo+hI/cX3h2XYYsbzXDZezHeWfA4LSBNFHNk2DpaR
        CTVtPSloPUUy9WRYSMTN/wCpighryZA1p3UjsCqD2mjL5TJksvTjQUvKe+78p7MhSDUp5TR08pkyDkSj
        QU/KSqnlMmShxnuiekzDKUcGxmTJz8IZdMpzHYCOf6rzmTIMtExcVvLFaezJkfqn/H/0LA8YTymbH1nk
        yY0ghMyX4gtVOo5mTJR+HAGBxINd1OzAMbeRKG4+c9o/9Q3o/wBCqzJk0/b/AKEZtef1sExCM2JXtsPk
        jN+sPqYTe67GZMivI8h+Bjj+z/LCEp2XU20TVH1uW6DiZMgPgaNa42+X5xJn5K0z5qQP99l/eZMjHFin
        ljf3RWXjKY1I9oO9E9jMmT17F0RikexkgpHsZkyUJJaVAnoYbTwZPSZMkHBdHC6ekI16ZkyScaGsTPGc
        9pkySiCB2PaSITbiZMlmQf/Z
</value>
  </data>
</root>